#!/usr/bin/env bash
source ${HOME}/.bashrc
################################################################################

declare QNUM="${1}"			; shift
declare QMEM="${1}"			; shift
declare QFIL="${1}"			; shift
declare QSYS="${1}"			; shift

########################################

declare BIOS="/usr/share/qemu/bios.bin"
if [[ ${1} == EFI ]]; then
	BIOS="/usr/share/edk2-ovmf/OVMF.fd"
	shift
fi

declare DISK="scsi-hd"
if [[ ${1} == IDE ]]; then
	DISK="ide-hd,bus=ide.0"
	shift
fi

################################################################################

declare FORK="true"
declare NET_NUM="0"
declare NET_TAP="true"
declare INTERFACE="display"

if [[ ${QSYS} == 0 ]]; then
	FORK="false"
elif [[ ${QSYS} == 1 ]]; then
	NET_NUM="5"
	INTERFACE="console"
fi

if ${FORK}; then
	FORK="&"
else
	FORK=
	INTERFACE=
fi

########################################

declare ROOT="false"
if [[ $(id -u) == 0 ]]; then
	ROOT="true"
else
	NET_TAP="false"
fi

########################################

declare QNAM=
if [[ -n ${QFIL} ]]; then
	QNAM="$(basename ${QFIL})"
else
	QNAM="null"
fi
declare QOUT="/tmp/qemu.${QNAM}.txt"
declare QNUL="/tmp/qemu.null.qcow2"

declare QISO="${QOUT/%.txt}.iso"
declare QNFL="${QOUT/%.txt}.qcow2"
declare QNSZ="100G"

declare QKRN=
declare QDSK=

declare QMCH=
declare QMON=
declare QVDA=
declare QVGA=
declare QNET=
declare QUSB=
declare QSND=

declare I=
declare T=

################################################################################

if ${ROOT}; then
	while [[ ! -c /dev/kvm ]]; do
		rmmod -v kvm-intel
		rmmod -v kvm
		modprobe -v kvm
		modprobe -v kvm-intel
	done
fi

export SDL_VIDEO_X11_DGAMOUSE="0"
export SDL_VIDEO_X11_MOUSEACCEL="0/0/0"
export QEMU_AUDIO_DRV="alsa"

########################################

I="${QFIL}"
I+=" /.g/_data/_systems/qemu/${QFIL}"
I+=" /.g/_data/_target/iso/${QFIL}"
I="$(find ${I} 2>/dev/null | sort -n | tail -n1)"
if [[ -n ${I} ]]; then
	I="$(realpath ${I})"
else
	I=
fi

QDSK="-device virtio-scsi-pci,id=scsi0,bus=pci.0"
QDSK+=" -drive id=cdrom0,if=none,format=raw,file=${QISO}"
QDSK+=" -device scsi-cd,drive=cdrom0,bootindex=1"
if [[ ! -f ${QISO} ]]; then
	touch ${QISO}
fi

if [[ -n $(file -L ${I} 2>/dev/null | ${GREP} "Linux[ ]kernel[ ].+[ ]boot[ ]executable") ]]; then
	QKRN="-kernel ${I}"
	if [[ -n $(file -L ${I/%.kernel}.initrd 2>/dev/null | ${GREP} "(XZ|gzip)[ ]compressed[ ]data") ]]; then
		QKRN+=" -initrd ${I/%.kernel}.initrd"
	fi
	QKRN+=" -append console=ttyS0,38400"
elif [[ -n $(file -L ${I} 2>/dev/null | ${GREP} "DOS[/]MBR[ ]boot[ ]sector[;]") ]]; then
	QDSK+=" -drive id=cdrom1,if=none,format=raw,file=${I}"
	QDSK+=" -device scsi-cd,drive=cdrom1,bootindex=2"
elif [[ -f ${I} ]]; then
	QDSK+=" -drive id=drive0,if=none,file=${I}"
	QDSK+=" -device ${DISK},drive=drive0,bootindex=2"
elif [[ -b ${I} ]]; then
	QDSK+=" -drive id=drive0,if=none,format=raw,file=${I}"
	QDSK+=" -device ${DISK},drive=drive0,bootindex=2"
fi

QDSK+=" -drive id=drive1,if=none,format=qcow2,file=${QNFL}"
QDSK+=" -device scsi-hd,drive=drive1,bootindex=3"
if [[ ! -f ${QNFL} ]]; then
	qemu-img create -f qcow2 ${QNFL} ${QNSZ}
fi
if [[ ! -f ${QNUL} ]]; then
	${LN} ${QNFL} ${QNUL}
fi

########################################

if ${ROOT}; then
	QMCH="-machine type=pc,accel=kvm"
	QMCH+=" -enable-kvm"
#>>>	QMCH+=" -cpu host"
	QMCH+=" -cpu qemu64"
else
	QMCH="-machine type=pc"
	QMCH+=" -cpu qemu64"
fi

QMCH+=" -rtc base=utc,clock=host"
QMCH+=" -smp cpus=2,sockets=2,cores=1,threads=1"
QMCH+=" -realtime mlock=off"

########################################

QMON="-monitor telnet:127.0.0.1:999${QNUM},server,nowait"
QMON+=" -serial telnet:127.0.0.1:990${QNUM},server,nowait"

########################################

# http://www.linux-kvm.org/page/SPICE
# http://www.spice-space.org/page/Whiteboard/AgentProtocol

# SPICE Channel: vdagent
# SPICE Device: com.redhat.spice.0

QVDA="-spice addr=127.0.0.1,port=666${QNUM},disable-ticketing"
QVDA+=" -device virtio-serial,id=virtio-serial0"
QVDA+=" -chardev spicevmc,id=spicevmc0,name=vdagent"
QVDA+=" -device virtserialport,chardev=spicevmc0,bus=virtio-serial0.0,nr=1,name=com.redhat.spice.0"

########################################

QVGA="-display curses"
QVGA+=" -vga qxl"
QVGA+=" -device qxl,id=qxl0,max_outputs=1"
QVGA+=" -device qxl,id=qxl1,max_outputs=1"
QVGA+=" -device qxl,id=qxl2,max_outputs=1"
QVGA+=" -vnc 127.0.0.1:9${QNUM}"

########################################

QNET="-netdev user"
QNET+=",id=user0"
QNET+=",net=10.0.0.0/16"
QNET+=",host=10.0.0.254"
QNET+=",dns=10.0.0.253"
QNET+=",smb=/tmp,smbserver=10.0.0.252"
QNET+=",dhcpstart=10.0.${QNUM}.254"
QNET+=",hostfwd=tcp::220${QNUM}-10.0.${QNUM}.254:22"
QNET+=",hostfwd=tcp::443${QNUM}-10.0.${QNUM}.254:443"
QNET+=",hostfwd=tcp::339${QNUM}-10.0.${QNUM}.254:3389"

for I in $(eval echo -en "{0..${NET_NUM}}"); do
	if ${NET_TAP}; then
		T="tap"
		QNET+=" -netdev ${T}"
		QNET+=",id=${T}${I}"
		QNET+=",ifname=qemu${I}_${QNUM}"
		QNET+=",script=${HOME}/scripts/qemu-network-up.bsh"
		QNET+=",downscript=${HOME}/scripts/qemu-network-down.bsh"
	else
		T="socket"
		QNET+=" -netdev ${T}"
		QNET+=",id=${T}${I}"
		QNET+=",mcast=239.0.0.${I}:10000"
		QNET+=",localaddr=127.0.0.1"
	fi

	if ! ${NET_TAP} && [[ ${I} == 0 ]]; then
		T="user"
	fi
	QNET+=" -device e1000"
	QNET+=",id=nic${I}"
	QNET+=",netdev=${T}${I}"
	QNET+=",mac=52:54:00:10:0${I}:0${QNUM}"
	if [[ ${I} == 0 ]]; then
		QNET+=",bootindex=4"
	fi

	if ${NET_TAP}; then
		${HOME}/scripts/qemu-network.bsh
	fi
done

########################################

# http://www.kraxel.org/cgit/qemu/tree/docs/usb2.txt

QUSB="-usb"
QUSB+=" -device usb-mouse,bus=usb-bus.0"
QUSB+=" -device usb-tablet,bus=usb-bus.0"

QUSB+=" -device nec-usb-xhci,id=xhci0"

########################################

QSND="-soundhw all"

################################################################################

eval exec qemu-system-x86_64 \
	-name ${QNAM} \
	-nodefaults \
	-nodefconfig \
	-no-user-config \
	\
	-bios ${BIOS} \
	${QMCH} -m ${QMEM} \
	${QMON} \
	${QVDA} \
	${QVGA} \
	${QNET} \
	${QUSB} \
	${QSND} \
	\
	${QKRN} \
	${QDSK} \
	\
	"${@}" \
	-writeconfig "${QOUT}" ${FORK}

########################################

sleep 1
cat "${QOUT}"

if [[ ${INTERFACE} == display ]]; then
#>>>	exec ${VNC} 127.0.0.1:599${QNUM} &
	exec remote-viewer --title=SPICE:${QNUM} spice://127.0.0.1/?port=666${QNUM} &
	exec telnet 127.0.0.1 999${QNUM}
elif [[ ${INTERFACE} == console ]]; then
	exec telnet 127.0.0.1 990${QNUM}
fi

exit 0
################################################################################
# end of file
################################################################################
