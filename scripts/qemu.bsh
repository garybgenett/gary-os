#!/usr/bin/env bash
source ${HOME}/.bashrc
################################################################################

declare QNUM="${1}"			; shift
declare QMEM="${1}"			; shift
declare FILE="${1}"			; shift
declare QSYS="${1}"			; shift

################################################################################

declare FORK="true"
declare INTERFACE="display"

if [[ ${QSYS} == 0 ]]; then
	FORK="false"
elif [[ ${QSYS} == 1 ]]; then
	INTERFACE="console"
fi

if ${FORK}; then
	FORK="&"
else
	FORK=
	INTERFACE=
fi

########################################

declare ROOT="false"
if [[ $(id -u) == 0 ]]; then
	ROOT="true"
fi

########################################

declare QDSK=
declare QMCH=

declare I=

################################################################################

if ${ROOT}; then
	while [[ ! -c /dev/kvm ]]; do
		rmmod -v kvm-intel
		rmmod -v kvm
		modprobe -v kvm
		modprobe -v kvm-intel
	done
fi

export SDL_VIDEO_X11_DGAMOUSE="0"
export SDL_VIDEO_X11_MOUSEACCEL="0/0/0"
export QEMU_AUDIO_DRV="alsa"

########################################

QDSK="${FILE}"
QDSK="${QDSK} /.g/_data/_systems/qemu/${FILE}"
QDSK="${QDSK} /.g/_data/_target/iso/${FILE}"

for I in $(eval find ${QDSK} 2>/dev/null); do
	QDSK="${I}"
done

#>>>QDSK="-drive file=${QDSK},if=scsi,bus=0,unit=0,media=disk"
#>>>QDSK="-drive file=${QDSK},if=ide,index=0,media=disk"
#>>>QDSK="-drive file=${QDSK},if=ide,index=3,media=cdrom -boot once=d"

QDSK="-device ahci,id=ahci0,multifunction=on"

QDSK+=" "; QDSK+="-drive id=cdrom0,if=none"
QDSK+=" "; QDSK+="-device ide-cd,drive=cdrom0,bus=ahci0.0,bootindex=0"

QDSK+=" "; QDSK+="-drive id=disk0,if=none,file=${I}"
QDSK+=" "; QDSK+="-device ide-drive,drive=disk0,bus=ahci0.1,bootindex=1"

########################################

if ${ROOT}; then
	QMCH="-machine type=q35,accel=kvm"
	QMCH+=" "; QMCH+="-enable-kvm"
	QMCH+=" "; QMCH+="-cpu host"
else
	QMCH="-machine type=pc"
	QMCH+=" "; QMCH+="-cpu qemu64"
fi

########################################

declare USER_NIC="user,vlan=0"
USER_NIC="${USER_NIC},net=10.0.0.0/16"
USER_NIC="${USER_NIC},host=10.0.0.254"
USER_NIC="${USER_NIC},dns=10.0.0.253"
USER_NIC="${USER_NIC},smb=/tmp,smbserver=10.0.0.252"
USER_NIC="${USER_NIC},dhcpstart=10.0.${QNUM}.254"
USER_NIC="${USER_NIC},hostfwd=tcp::220${QNUM}-10.0.${QNUM}.254:22"
USER_NIC="${USER_NIC},hostfwd=tcp::443${QNUM}-10.0.${QNUM}.254:443"
USER_NIC="${USER_NIC},hostfwd=tcp::339${QNUM}-10.0.${QNUM}.254:3389"

declare BR
declare VNIC[*]
for BR in {1..5}; do
	brctl addbr qemu${BR}					2>/dev/null
	ip link set dev qemu${BR} up				2>/dev/null
	ip address add dev qemu${BR} local 10.${BR}.0.254/16	2>/dev/null
	VNIC[${BR}]="tap,vlan=${BR}"
	VNIC[${BR}]="${VNIC[$BR]},name=qemu_10_${BR}_${QNUM}"
	VNIC[${BR}]="${VNIC[$BR]},ifname=qemu_10_${BR}_${QNUM}"
	VNIC[${BR}]="${VNIC[$BR]},script=/tmp/qemu-up"
	VNIC[${BR}]="${VNIC[$BR]},downscript=/tmp/qemu-down"
	iptables -D INPUT	-i qemu${BR}			-j ACCEPT 2>/dev/null
	iptables -I INPUT 1	-i qemu${BR}			-j ACCEPT 2>/dev/null
	iptables -D FORWARD	-i qemu${BR}	-o qemu${BR}	-j ACCEPT 2>/dev/null
	iptables -I FORWARD 1	-i qemu${BR}	-o qemu${BR}	-j ACCEPT 2>/dev/null
	iptables -D OUTPUT			-o qemu${BR}	-j ACCEPT 2>/dev/null
	iptables -I OUTPUT 1			-o qemu${BR}	-j ACCEPT 2>/dev/null
done

cat >/tmp/qemu-up <<_EOF_
#!/bin/bash
echo \${@}
IFC=\${1}
BR=\$(echo \${IFC} | cut -d_ -f3)
ip link set dev \${IFC} up
brctl addif qemu\${BR} \${IFC}
# end of file
_EOF_
chmod -v 755 /tmp/qemu-up

cat >/tmp/qemu-down <<_EOF_
#!/bin/bash
echo \${@}
IFC=\${1}
BR=\$(echo \${IFC} | cut -d_ -f3)
ip link set dev \${IFC} down
brctl delif qemu\${BR} \${IFC}
ip link delete dev \${IFC}
# end of file
_EOF_
chmod -v 755 /tmp/qemu-down

################################################################################

#>>>	-daemonize \
#>>>	-vnc 127.0.0.1:${QNUM} \

eval exec qemu-system-x86_64 \
	-name ${FILE} \
	-nodefaults \
	-no-user-config \
	${QMCH} \
	-monitor telnet:127.0.0.1:999${QNUM},server,nowait \
	-serial telnet:127.0.0.1:990${QNUM},server,nowait \
	-rtc base=utc,clock=host \
	-smp cpus=2,sockets=2,cores=1,threads=1 \
	-realtime mlock=off \
	-m ${QMEM} \
	-net nic,vlan=0,model=e1000,macaddr=52:54:00:10:00:0${QNUM} -net ${USER_NIC} \
	-net nic,vlan=1,model=e1000,macaddr=52:54:00:10:01:0${QNUM} -net ${VNIC[1]} \
	-net nic,vlan=2,model=e1000,macaddr=52:54:00:10:02:0${QNUM} -net ${VNIC[2]} \
	-net nic,vlan=3,model=e1000,macaddr=52:54:00:10:03:0${QNUM} -net ${VNIC[3]} \
	-net nic,vlan=4,model=e1000,macaddr=52:54:00:10:04:0${QNUM} -net ${VNIC[4]} \
	-net nic,vlan=5,model=e1000,macaddr=52:54:00:10:05:0${QNUM} -net ${VNIC[5]} \
	-spice addr=127.0.0.1,port=666${QNUM},disable-ticketing \
	-vga qxl \
	-soundhw hda \
	-usb \
	-usbdevice tablet \
	${QDSK} \
	"${@}" ${FORK}

########################################

sleep 1

if [[ ${INTERFACE} == display ]]; then
#>>>	exec ${VNC} 127.0.0.1:590${QNUM} &
	exec spicy --host=127.0.0.1 --port=666${QNUM} &
	exec telnet 127.0.0.1 999${QNUM}
elif [[ ${INTERFACE} == console ]]; then
	exec telnet 127.0.0.1 990${QNUM}
fi

exit 0
################################################################################
# end of file
################################################################################
