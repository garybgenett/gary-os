#!/usr/bin/env bash
source ${HOME}/.bashrc
################################################################################

declare LENGTH="120"

########################################

declare RESET="false"
if [[ ${1} == -r ]]; then
	RESET="true"
fi

################################################################################

if [[ ${1} == -l ]]; then
	shift
	declare FILE=
	for FILE in $(find ./ | sort | ${GREP} "[.]rationale$"); do
		echo -en "\n[${FILE}]\n"
		cat ${FILE}
	done
	exit 0
fi

################################################################################

function review_header {
	perl -e '
		printf(
			"%-${ARGV[0]}.${ARGV[0]}s\n",
			"diff :: ${ARGV[1]} [${ARGV[2]}] " . ("=" x ${ARGV[0]})
		);
	' ${@}
	return 0
}

########################################

declare FILE
for FILE in $(
	find ./ -mindepth 2 -maxdepth 2 \
		\( -path ./.working/\* -prune \) \
		-o \( -path ./\*/\*.src -prune \) \
		-o \( -type d -print \) |
	${SED} "s|^[.]/||g" |
	sort
); do
	declare EBUILD="$(find ./${FILE}/*.ebuild -type f | tail -n1)"
	if ${RESET}; then
		${RSYNC_U} /var/git/meta-repo/kits/*/${FILE}/ ./${FILE}.src	1>&2
		ebuild ${EBUILD} digest						1>&2
	fi
	if [[ ! -f ${FILE}/.rationale ]]; then
		echo "MISSING: ${FILE}/.rationale"				1>&2
		exit 1
	fi
	review_header								${LENGTH} ${FILE} rationale
	cat ${FILE}/.rationale							2>&1
	review_header								${LENGTH} ${FILE} source
	diff ${DIFF_OPTS} -r /var/git/meta-repo/kits/*/${FILE} ./${FILE}.src	2>&1
	review_header								${LENGTH} ${FILE} target
	diff ${DIFF_OPTS} -r ./${FILE}.src ./${FILE}				2>&1
	review_header								${LENGTH} ${FILE} files
	${GREP} "[\"][\$][{]FILESDIR[}]" ${EBUILD}				2>&1
	echo									2>&1
	${LS} -R ./${FILE}							2>&1
done >${0}.txt

if ${RESET}; then
	read RESET
fi
${VIEW} +/^diff ${0}.txt

################################################################################
# end of file
################################################################################
