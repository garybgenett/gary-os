#!/usr/bin/env bash
source ${HOME}/.bashrc
umask 022
################################################################################

#>>> git-commit -- $(git-status gentoo/overlay 2>/dev/null | grep "<category>/<package>" | cut -d':' -f2 | sed "s|->.+$||g")
#>>> git-commit -- $(git-status gentoo/overlay 2>/dev/null | grep "modified:" | cut -d':' -f2)
#>>> git-commit -- $(git-status gentoo/overlay 2>/dev/null | grep "deleted:" | cut -d':' -f2)

#NOTE: ASSUMING LOCATION AND NAME OF THE "_SYSTEM" SCRIPT
#NOTE: THE HARD-SET VALUE MUST MATCH THE "_SYSTEM" VALUE

source $(dirname $(dirname "${_SELF}"))/_system ||
source /_build/gentoo/_system

########################################

declare ARCHIVE="_archive"
declare ECLASS="eclass"

declare LENGTH="120"

########################################

declare RESET="false"
declare RVIEW="false"
if [[ ${1} == -r ]]; then
	RESET="true"
	shift
fi
if [[ ${1} == -v ]]; then
	RVIEW="true"
	shift
fi

################################################################################

delete_empty $(realpath ${PWD})

################################################################################

if [[ ${1} == -l ]]; then
	shift
	declare FILES=
	declare FILE=
	for FILE in $(
		find ./ \
			\( -path ./${ARCHIVE} -prune \) \
			-o \( -path ./${ECLASS} -prune \) \
			-o -print \
		| ${SED} "s|^[.][/]||g" \
		| sort \
		| ${GREP} "[/][.]rationale$" \
	); do
		FILE="${FILE/%\/.rationale}"
		echo -en "\n[${FILE}] ($(
			${LS} ${FILE}/.keep 2>/dev/null
		))\n"
		cat ${FILE}/.rationale
		if [[ ! -f ${FILE}/.keep ]]; then
			FILES+=" ${FILE}"
		fi
	done
	echo -en "\n"
	for FILE in ${FILES}; do
		echo -en "${FILE}\n"
	done
	exit 0
fi

########################################

if [[ ${1} == -a ]]; then
	for FILE in $(
		find ./ -mindepth 2 -maxdepth 2 -type d \( \
			\( -path "./${ECLASS}/*" -prune \) \
			-o -print \
		\) \
		| ${SED} "s|^[.][/]||g" \
		| sort
	); do
		if [[ -n $(echo "${FILE}" | ${GREP} "^${ARCHIVE}") ]]; then
			echo "ARCHIVED: ${FILE}"
		elif [[ -f ${FILE}/.keep ]]; then
			echo "KEEPING: ${FILE}"
		else
			echo "ARCHIVING: ${FILE}"
			${MKDIR} ${ARCHIVE}/$(dirname ${FILE})
			${MV} ${FILE} ${ARCHIVE}/$(dirname ${FILE})
		fi
	done
	exit 0
fi

################################################################################

function review_header {
	if [[ ${2} == marker ]]; then
		echo -en "\n"
		perl -e '
			printf(
				"%-${ARGV[0]}.${ARGV[0]}s\n",
				("-" x ${ARGV[0]})
			);
		' ${@}
		return 0
	fi
	perl -e '
		printf(
			"%-${ARGV[0]}.${ARGV[0]}s\n",
			"diff :: ${ARGV[1]} [${ARGV[2]}] " . ("=" x ${ARGV[0]})
		);
	' ${@}
	return 0
}

########################################

echo -en "# vim: filetype=diff\n" >${0}.txt

declare FILE
for FILE in $(
	find ./ -mindepth 2 -maxdepth 2 -type d \( \
		\( -path "./${ARCHIVE}/*" -prune \) \
		-o \( -path "./${ECLASS}/*" -prune \) \
		-o \( -path ./metadata -prune \) \
		-o \( -path ./overlay.conf -prune \) \
		-o \( -path ./profiles -prune \) \
		-o -print \
	\) \
	| ${SED} "s|^[.]/||g" \
	| sort
); do
	declare EBUILD="$(find ./${FILE}/*.ebuild -type f | tail -n1)"
	if ${RESET}; then
		${RSYNC_U} ${REPDIR}/${FILE}/ ./${FILE}/.source		1>&2
		ebuild ${EBUILD} digest					1>&2
	fi
	if [[ ! -f ${FILE}/.rationale ]]; then
		echo "MISSING: ${FILE}/.rationale"			1>&2
		exit 1
	fi
	review_header							${LENGTH} marker
	review_header							${LENGTH} ${FILE} rationale
	cat ${FILE}/.rationale						2>&1
	review_header							${LENGTH} ${FILE} source
	diff ${DIFF_OPTS} -r ${REPDIR}/${FILE} ./${FILE}/.source	2>&1
	review_header							${LENGTH} ${FILE} target
	diff ${DIFF_OPTS} -r ./${FILE}/.source ./${FILE}		2>&1
	review_header							${LENGTH} ${FILE} files
	${GREP} "[\"][\$][{]FILESDIR[}]" ${EBUILD}			2>&1
	echo								2>&1
	${LS} -R ./${FILE}						2>&1
done >>${0}.txt

########################################

if ${RESET} && ${RVIEW}; then
	read FILE
fi
if ${RVIEW}; then
	${VIEW} +/^diff ${0}.txt
fi

################################################################################
# end of file
################################################################################
