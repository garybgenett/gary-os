#!/usr/bin/env bash
source ${HOME}/.bashrc
################################################################################

declare SOURCE="/.g/_data/_target/iso"
declare GITDIR="/.g/_data/_build/funtoo/portage"
declare METDIR="/.g/_data/_builds/_metro"

declare TARGET="/.g/_data/_builds/_gentoo"
declare TOOR=
declare _NEW="NEW"
declare _PKG="packages"
if [[ ${1} == -t ]]; then
	shift
	TARGET="/.g/_toor"
	TOOR="-t"
fi
if [[ ${1} == -m ]] || [[ ${1} == -~ ]]; then
	[[ ${1} == -~ ]] || shift
	TARGET="/.g/_toor"
	TOOR="-m"
	_NEW="MET"
	_PKG="metro"
fi

declare COMMIT=
declare REPO
for REPO in \
	.setup	\
	.static
do
	COMMIT="${COMMIT}${REPO}: $(
		cat /.g/_data/zactive/${REPO}.git/refs/heads/master 2>/dev/null
	)\n"
done

########################################

declare AUTO=
declare ASK="--ask y"
if [[ ${1} == -a ]]; then
	shift
	AUTO="-a"
	ASK="--ask n"
fi

declare NEW="false"
declare BLD="false"
declare KRN="false"
declare CFG="false"
if [[ ${1} == -n ]]; then
	shift
	NEW="true"
fi
if [[ ${1} == -b ]]; then
	shift
	BLD="true"
fi
if [[ ${1} == -k ]]; then
	shift
	KRN="true"
fi
if [[ ${1} == -c ]]; then
	shift
	CFG="true"
fi

########################################

declare SAFE_ENV="prompt -z EMERGE_DEFAULT_OPTS="
if [[ ${1} == -i ]] || [[ ${1} == -s ]]; then
	SAFE_ENV="prompt -z chroot ${TARGET}"
elif [[ ${1} == -u ]]; then
	SAFE_ENV="eval prompt -z"
fi

################################################################################

if [[ ${1} == -s ]]; then
	${SAFE_ENV} /usr/bin/env bash -o vi
	exit 0
fi

########################################

if [[ ${1} == -l ]]; then
	shift
	echo -en "http://gentoobrowse.randomdan.homeip.net/package/$(
		cd /usr/portage && ls -d */${1}
	)#bugs\n"
	exit 0
fi

################################################################################

if [[ ${1} == -0 ]]; then ${_SELF} ${TOOR} -a -n -b -k -i	| prompt -c	; exit 0; fi
if [[ ${1} == -/ ]]; then ${_SELF} ${TOOR} -a -i		| prompt -c	; exit 0; fi
if [[ ${1} == -1 ]]; then ${_SELF} ${TOOR} -a -b -i		| prompt -c	; exit 0; fi
if [[ ${1} == -2 ]]; then ${_SELF} ${TOOR} -c -i				; exit 0; fi

if [[ ${1} == -~ ]]; then
	if [[ -n $(find ${TARGET} -maxdepth 0 -empty) ]]; then
#>>>		tar -pvvxJ -C ${TARGET} -f		$(ls -t ${SOURCE}/stage3-*i686*funtoo*.tar.xz		| head -n1)
		tar -pvvxJ -C ${TARGET} -f		$(ls -t ${METDIR}/stage3-*core2_64*funtoo*.tar.xz	| head -n1)
		tar -pvvxJ -C ${TARGET}/usr -f		$(ls -t ${METDIR}/portage-*.tar.xz			| head -n1)
		${RSYNC_U} ${METDIR}/.distfiles/	${TARGET}/usr/portage/distfiles
	fi
	${_SELF} ${TOOR} -a -n -i | prompt -c
	exit 0
fi

########################################

if [[ ${1} == -i ]]; then
	umount					${TARGET}/{dev{/pts,/shm,},proc,sys}	2>/dev/null
	if [[ ! -d ${TARGET}/boot ]]; then
#>>>		tar -pvvxJ -C ${TARGET} -f	$(ls -t ${SOURCE}/stage3-*i686*funtoo*.tar.xz		| head -n1)
		tar -pvvxJ -C ${TARGET} -f	$(ls -t ${SOURCE}/stage3-*core2_64*funtoo*.tar.xz	| head -n1)
		${RSYNC_U} ${SOURCE}/*funtoo*	${TARGET}/_build/
		${RSYNC_U} ${GITDIR}{,.git}	${TARGET}/usr/
		(cd				${TARGET}/usr/portage &&
		${GIT} reset --hard		$(cat ${HOME}/setup/gentoo/.funtoo))
	fi
	echo -en "${COMMIT}"			>${TARGET}/_build/_commit
	${RSYNC_U} ${HOME}/setup/gentoo/	${TARGET}/_build/_config
	${RSYNC_U} ${HOME}/setup/linux/		${TARGET}/_build/_kernel
	mount -v --bind /dev			${TARGET}/dev
	mount -v --bind /dev/pts		${TARGET}/dev/pts
	mount -v --bind /dev/shm		${TARGET}/dev/shm
	mount -v --bind /proc			${TARGET}/proc
	mount -v --bind /sys			${TARGET}/sys
	${MKDIR}				${TARGET}/.g/.home
	${HOME}/scripts/_sync _home _build	${TARGET}/.g/.home
	${RM}					${TARGET}/.g/.home/.ssh/id_*
	HOME=/.g/.home ${SAFE_ENV}		/.g/.home/scripts/_sync mount g sda
	HOME=/.g/.home ${SAFE_ENV}		/.g/.home/setup/.setconf
	if ${NEW}; then
		if [[ ${_NEW} == "MET" ]]; then
			${SED} -i "N;N;N;N;N;s|^[\"]\n\nMETRO_USE=([^\n]+)\n||g" ${TARGET}/.setup/gentoo/make.conf
		fi
		for NEW in \
			${TARGET}/.setup/gentoo/package.*
		do
			${SED} -i "s|^[#][{]${_NEW}[}][ ](.+)$|\1|g" ${NEW}
		done
	fi
	if ${BLD}; then
		${SAFE_ENV}			locale-gen						|| exit 1
		HOME=/.g/.home ${SAFE_ENV}	emerge ${ASK} ccache debugedit portage glibc gcc	|| exit 1
		HOME=/.g/.home ${SAFE_ENV}	emerge ${ASK} eselect genkernel gentoolkit		|| exit 1
#>>>		${SAFE_ENV}			eselect profile add 1					|| exit 1
		${SAFE_ENV}			eselect profile set-build 3				|| exit 1
		${SAFE_ENV}			eselect profile set-flavor 8				|| exit 1
		HOME=/.g/.home ${SAFE_ENV}	emerge ${ASK} --emptytree \@system \@world		|| exit 1
	fi
	if ${KRN}; then for KRN in $(
		${SED} -n "s|^.+/gentoo-sources:(.+)$|\1|gp" ${HOME}/setup/gentoo/sets/${_PKG}
	); do
		${RM}				${TARGET}/usr/src/linux					|| exit 1
		${LN} linux-${KRN}-gentoo	${TARGET}/usr/src/linux					|| exit 1
		HOME=/.g/.home ${SAFE_ENV}	emerge ${ASK} =gentoo-sources-${KRN}			|| exit 1
		declare GENKERNEL_OPTS="--loglevel=5 --bootloader=grub --symlink kernel"
		if [[ -z ${AUTO} ]]; then
		HOME=/.g/.home ${SAFE_ENV}	genkernel ${GENKERNEL_OPTS} kernel --menuconfig		|| exit 1; else
		HOME=/.g/.home ${SAFE_ENV}	genkernel ${GENKERNEL_OPTS} kernel			\
						--kernel-config=/.setup/linux/config-gentoo64-${KRN}	|| exit 1; fi
#>>>		KRN="kernel-genkernel-x86-${KRN}-gentoo"						|| exit 1
		KRN="kernel-genkernel-x86_64-${KRN}-gentoo"						|| exit 1
		${RM}				${TARGET}/boot/_cur					|| exit 1
		${LN} ${KRN}			${TARGET}/boot/_cur					|| exit 1
		${RM}				${TARGET}/boot/_new					|| exit 1
		${LN} kernel			${TARGET}/boot/_new					|| exit 1
		${RM}				${TARGET}/boot/_old					|| exit 1
		${LN} kernel.old		${TARGET}/boot/_old					|| exit 1
		{ [[ -L				${TARGET}/boot/kernel.old ]] ||
		${LN} ${KRN}			${TARGET}/boot/kernel.old; }				|| exit 1
	done; fi
	if ${CFG}; then
		cat >>${TARGET}/etc/passwd <<END_OF_FILE
---
root:x:0:0::/.g/_data/zactive/.home:/bin/bash
plastic:x:1000:1000::/.g/_data/zactive/.home:/bin/bash
user:x:1001:1001::/.g/_data/zactive/.home:/bin/bash
null:x:666:666::/tmp/.null:/bin/nologin
lfs-user:x:9999:9999::/.g/_data/_build/_lfs/.lfs/lfs-user:/bin/bash
---
END_OF_FILE
		cat >>${TARGET}/etc/shadow <<END_OF_FILE
---
root::::::::
plastic::::::::
user:*:::::::
null:*:::::::
lfs-user:*:::::::
---
END_OF_FILE
		cat >>${TARGET}/etc/group <<END_OF_FILE
---
root:x:0:root,plastic
wheel:x:10:root,plastic,lfs-user
plastic:x:1000:root,plastic
user:x:1001:root,plastic,user
null:x:666:root,plastic,null
lfs-user:x:9999:root,plastic,lfs-user
---
audio:x:---:root,plastic,null
cdrom:x:---:root,plastic,null
video:x:---:root,plastic,null
games:x:---:root,plastic,null
---
END_OF_FILE
		cat >>${TARGET}/etc/gshadow <<END_OF_FILE
---
root:::root,plastic
wheel:::root,plastic,lfs-user
plastic:::root,plastic
user:::root,plastic,user
null:::root,plastic,null
lfs-user:::root,plastic,lfs-user
---
audio:::root,plastic,null
cdrom:::root,plastic,null
video:::root,plastic,null
games:::root,plastic,null
---
END_OF_FILE
		cat >>${TARGET}/etc/pam.d/su <<END_OF_FILE
---
auth sufficient pam_wheel.so use_uid trust
auth required pam_wheel.so use_uid
---
END_OF_FILE
		cat >>${TARGET}/etc/sudoers <<END_OF_FILE
---
Defaults exempt_group=wheel
%wheel ALL=(ALL) ALL
%wheel ALL=(ALL) NOPASSWD: ALL
---
END_OF_FILE
		${EDITOR}			${TARGET}/etc/passwd	\
						${TARGET}/etc/shadow	\
						${TARGET}/etc/group	\
						${TARGET}/etc/gshadow	\
						${TARGET}/etc/pam.d/su	\
						${TARGET}/etc/sudoers
		declare USER
		for USER in			root	\
						plastic
		do				echo "password: ${USER}"
			until			${SAFE_ENV} passwd ${USER}
			do			echo "retry: ${USER}"
			done
		done
	fi
	HOME=/.g/.home ${SAFE_ENV}		${_SELF} ${TOOR} ${AUTO} -f	|| exit 1
	HOME=/.g/.home ${SAFE_ENV}		${_SELF} ${TOOR} ${AUTO} -u	|| exit 1
	umount					${TARGET}/{dev{/pts,/shm,},proc,sys}	2>/dev/null
	exit 0
fi

################################################################################

if [[ ${1} == -u ]]; then
	${LL} /_gentoo
	cat /_gentoo/+okay
	locale-gen
	gcc-config ${CHOST}-$(equery list gcc | awk '{print $1;}' | cut -d- -f3 | sort -n | tail -n1)
	gcc-config --list-profiles
	java-config --set-system-vm $(equery list icedtea | awk '{print $1;}' | cut -d/ -f2 | cut -d. -f-1 | sort -n | tail -n1)
	java-config --list-available-vms
#>>>	eselect profile add 1
	eselect profile set-build 3
	eselect profile set-flavor 8
	declare SELECT
	for SELECT in \
		mesa:--auto		\
		opengl:xorg-x11		\
		python:python3.3	\
		unison:2.45		\
		vi:gvim			\
		\
		package-manager:portage	\
		profile:1
	do
		declare KEY="$(echo "${SELECT}" | ${SED} "s/^(.+)[:](.+)$/\1/g")"
		declare VAL="$(echo "${SELECT}" | ${SED} "s/^(.+)[:](.+)$/\2/g")"
		eselect ${KEY} set ${VAL}
		eselect ${KEY} list
	done
	cat /dev/null	>/var/lib/portage/world
	echo "@${_PKG}"	>/var/lib/portage/world_sets
	declare ECLEAN="eclean --verbose"
	declare D_CONF="dispatch-conf"
	[[ -n ${AUTO} ]] && D_CONF="expect -c \"spawn ${D_CONF}; expect use-new {send u\r; exp_continue;};\""
	${SAFE_ENV} emerge ${ASK} --update --deep --newuse \@system	|| exit 1
	${SAFE_ENV} emerge ${ASK} --update --deep --newuse \@world	|| exit 1
	${SAFE_ENV} emerge ${ASK} \@preserved-rebuild			|| exit 1
	${SAFE_ENV} emerge ${ASK} \@module-rebuild			|| exit 1
	${SAFE_ENV} emerge ${ASK} --depclean				|| exit 1
	${SAFE_ENV} revdep-rebuild --ignore				|| exit 1
	${SAFE_ENV} emaint --fix all					|| exit 1
	${SAFE_ENV} ${ECLEAN} distfiles					|| exit 1
	${SAFE_ENV} ${ECLEAN} packages					|| exit 1
	${SAFE_ENV} ${D_CONF}						|| exit 1

########################################

elif [[ ${1} != -! ]]; then
	if [[ ${1} != -f ]]; then
		${RM} /usr/portage/.git
		${LN} ../portage.git /usr/portage/.git
		${SAFE_ENV} emerge --verbose --sync
		${RM} /usr/portage/.git
	fi
	${SAFE_ENV} emerge --emptytree --fetch-all-uri \@system \@world
fi

################################################################################

${SAFE_ENV} ${HOME}/setup/gentoo/.emergent
${SAFE_ENV} ${HOME}/setup/gentoo/.hacks

########################################

if [[ -z ${AUTO} ]] && [[ ${1} == -u ]]; then
	eselect news read new
fi

########################################

echo -en "\n"
wc -l /_gentoo/_packages
wc -l /_gentoo/_packages.db
diff  /_gentoo/_packages.db /_gentoo/_packages |
	${GREP} "^[<>]"

echo -en "\n"
${LL} /_gentoo/+okay*

exit 0
################################################################################
# end of file
################################################################################
