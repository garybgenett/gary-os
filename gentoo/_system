#!/usr/bin/env bash
source ${HOME}/.bashrc
################################################################################

declare INST_DIR="/.g/_toor"
declare FILE_SRC="/.g/_data/_target/iso"

declare LTIME="/usr/share/zoneinfo/US/Pacific"

########################################

declare SAFE_ENV="prompt -z EMERGE_DEFAULT_OPTS="
if [[ ${1} == -i ]] || [[ ${1} == -s ]]; then
	SAFE_ENV="prompt -z chroot ${INST_DIR}"
elif [[ ${1} == -u ]]; then
	SAFE_ENV="prompt -z"
fi

################################################################################

if [[ ${1} == -i ]]; then
	umount -v				${INST_DIR}/dev/*
	umount -v				${INST_DIR}/*
	if [[ ! -d ${INST_DIR}/boot ]]; then
#>>>		tar -pvvx -C ${INST_DIR} -f	$(ls ${FILE_SRC}/*stage3-i686*.tar.bz2	| tail -n1)
		tar -pvvx -C ${INST_DIR} -f	$(ls ${FILE_SRC}/*stage3-amd64*.tar.bz2	| tail -n1)
		xz -cd				$(ls ${FILE_SRC}/*portage*.tar.xz	| tail -n1) |
		tar -pvvx -f- -C		${INST_DIR}/usr
	fi
	${MKDIR}				${INST_DIR}/_gentoo
	${CP} -L /_gentoo/*.{okay,OKAY}		${INST_DIR}/_gentoo
	${MKDIR}				${INST_DIR}/.setup
	${CP} -L ${HOME}/setup/gentoo		${INST_DIR}/.setup
	${LN} /.setup/gentoo/make.conf		${INST_DIR}/etc/portage
	${LN} /.setup/gentoo/package.*		${INST_DIR}/etc/portage
	${CP} -L ${INST_DIR}${LTIME}		${INST_DIR}/etc/localtime
	${CP} -L /etc/locale.gen		${INST_DIR}/etc/
	${CP} -L /etc/resolv.conf		${INST_DIR}/etc/
	mount -v --bind /dev			${INST_DIR}/dev
	mount -v --bind /dev/pts		${INST_DIR}/dev/pts
	mount -v --bind /proc			${INST_DIR}/proc
	mount -v --bind /sys			${INST_DIR}/sys
	${SAFE_ENV}				locale-gen
	${SAFE_ENV}				eselect profile set 1
	${MKDIR}				${INST_DIR}/.g
	${CP} -L /.g/.home			${INST_DIR}/.g/.home
	${CP} -L ${HOME}/setup/gentoo		${INST_DIR}/.g/.home/setup
	${RSYNC_U} --filter="-_/packages/**" \
		/usr/portage/			${INST_DIR}/usr/portage
	HOME=/.g/.home ${SAFE_ENV}		/.setup/gentoo/_system
	HOME=/.g/.home ${SAFE_ENV}		emerge ccache portage
	HOME=/.g/.home ${SAFE_ENV}		emerge --emptytree system world
	HOME=/.g/.home ${SAFE_ENV}		/.setup/gentoo/_system -u
	exit 0
elif [[ ${1} == -s ]]; then
	${SAFE_ENV} /bin/bash -o vi
#>>>	source /etc/profile
#>>>	alias ll="ls -la"
	exit 0
elif [[ ${1} == -u ]]; then
	${LL} /_gentoo
	cat /_gentoo/+okay
	cat /dev/null >/var/lib/portage/world
	declare COMMAND
	${SED} -n \
		-e "s/^#[[:space:]]+(gcc-config[ ].+$)/\1/gp" \
		-e "s/^#[[:space:]]+(java-config[ ].+$)/\1/gp" \
		-e "s/^#[[:space:]]+(eselect[ ].+[ ]set[ ].+$)/\1/gp" \
		${HOME}/setup/gentoo/make.conf |
	while read -r COMMAND
	do
		eval ${COMMAND}
	done
	if [[ ${HOSTNAME} == spider ]]; then
		eselect opencl set nvidia
		eselect opengl set nvidia
	fi
	declare ECLEAN="eclean --verbose --destructive --package-names"
	${SAFE_ENV} emerge --update --deep --newuse system				|| exit 1
	${SAFE_ENV} emerge --noreplace --select $(${HOME}/setup/gentoo/.packages)	|| exit 1
	${SAFE_ENV} emerge --update --deep --newuse world				|| exit 1
	${SAFE_ENV} dispatch-conf							|| exit 1
	${SAFE_ENV} emerge --depclean							|| exit 1
	${SAFE_ENV} revdep-rebuild --ignore						|| exit 1
	${SAFE_ENV} emaint --fix all							|| exit 1
	${SAFE_ENV} ${ECLEAN} distfiles --fetch-restricted				|| exit 1
	${SAFE_ENV} ${ECLEAN} packages							|| exit 1
	${SAFE_ENV} equery list --duplicates '*'
else
	${SAFE_ENV} emerge --verbose --sync
	${SAFE_ENV} emerge --emptytree --fetch-all-uri system world
fi

########################################

${SAFE_ENV} ${HOME}/setup/gentoo/.emergent
${SAFE_ENV} ${HOME}/setup/gentoo/.hacks

exit 0
################################################################################
# end of file
################################################################################
