#!/usr/bin/env bash
source ${HOME}/.bashrc
################################################################################

declare INST_DIR="/.g/_toor"
declare FILE_SRC="/.g/_data/_target/iso"

declare LTIME="/usr/share/zoneinfo/US/Pacific"

########################################

declare SAFE_ENV="prompt -z EMERGE_DEFAULT_OPTS="
if [[ ${1} == -i ]] || [[ ${1} == -s ]]; then
	SAFE_ENV="prompt -z chroot ${INST_DIR}"
elif [[ ${1} == -u ]]; then
	SAFE_ENV="prompt -z"
fi

################################################################################

if [[ ${1} == -i ]]; then
	umount					${INST_DIR}/dev/*	2>/dev/null
	umount					${INST_DIR}/*		2>/dev/null
	if [[ ! -d ${INST_DIR}/boot ]]; then
#>>>		tar -pvvx -C ${INST_DIR} -f	$(ls ${FILE_SRC}/stage3-i686-*.tar.bz2	| tail -n1)
		tar -pvvx -C ${INST_DIR} -f	$(ls ${FILE_SRC}/stage3-amd64-*.tar.bz2	| tail -n1)
		xz -cd				$(ls ${FILE_SRC}/portage-*.tar.xz	| tail -n1) |
		tar -pvvx -f- -C		${INST_DIR}/usr
	fi
	mount -v --bind /dev			${INST_DIR}/dev
	mount -v --bind /dev/pts		${INST_DIR}/dev/pts
	mount -v --bind /proc			${INST_DIR}/proc
	mount -v --bind /sys			${INST_DIR}/sys
	${MKDIR}				${INST_DIR}/_build
	${RSYNC_U} ${FILE_SRC}/handbook-*	${INST_DIR}/_build/
	${RSYNC_U} ${FILE_SRC}/portage-*	${INST_DIR}/_build/
	${RSYNC_U} ${FILE_SRC}/stage3-*		${INST_DIR}/_build/
	${MKDIR}				${INST_DIR}/_gentoo
	${RSYNC_U} /_gentoo/*.{okay,OKAY}	${INST_DIR}/_gentoo/
	${MKDIR}				${INST_DIR}/.g/.home
	${HOME}/scripts/_sync _home _build	${INST_DIR}/.g/.home
	${RM}					${INST_DIR}/.g/.home/.ssh/id_*
	HOME=/.g/.home ${SAFE_ENV}		/.g/.home/scripts/_sync mount g sda
	HOME=/.g/.home ${SAFE_ENV}		/.g/.home/setup/.setconf
#BUILD	${SAFE_ENV}				locale-gen
#BUILD	HOME=/.g/.home ${SAFE_ENV}		emerge ccache debugedit portage				|| exit 1
#BUILD	HOME=/.g/.home ${SAFE_ENV}		emerge eselect gcc-config gentoolkit java-config	|| exit 1
#BUILD	HOME=/.g/.home ${SAFE_ENV}		emerge --emptytree system world				|| exit 1
#BUILD	${RSYNC_U} /usr/portage/		${INST_DIR}/usr/portage					|| exit 1
#>>>	HOME=/.g/.home ${SAFE_ENV}		/.setup/gentoo/_system					|| exit 1
#BUILD	${SAFE_ENV}				eselect profile set 1
#BUILD	HOME=/.g/.home ${SAFE_ENV}		eselect news read all
#BUILD	HOME=/.g/.home ${SAFE_ENV}		eselect news purge
	HOME=/.g/.home ${SAFE_ENV}		/.setup/gentoo/_system -u
	umount					${INST_DIR}/dev/*	2>/dev/null
	umount					${INST_DIR}/*		2>/dev/null
	exit 0

########################################

elif [[ ${1} == -s ]]; then
	${SAFE_ENV} /bin/bash -o vi
#>>>	source /etc/profile
#>>>	alias ll="ls -la"
	exit 0

########################################

elif [[ ${1} == -u ]]; then
	${LL} /_gentoo
	cat /_gentoo/+okay
	cat /dev/null >/var/lib/portage/world
	locale-gen
	declare COMMAND
	${SED} -n \
		-e "s/^#[[:space:]]+(gcc-config[ ].+$)/\1/gp" \
		-e "s/^#[[:space:]]+(java-config[ ].+$)/\1/gp" \
		-e "s/^#[[:space:]]+(eselect[ ].+[ ]set[ ].+$)/\1/gp" \
		${HOME}/setup/gentoo/make.conf |
	while read -r COMMAND; do
		eval ${COMMAND}
	done
	declare ECLEAN="eclean --verbose --destructive" #>>> --package-names
	${SAFE_ENV} emerge --update --deep --newuse system				|| exit 1
	${SAFE_ENV} emerge --noreplace --select $(${HOME}/setup/gentoo/.packages)	|| exit 1
	${SAFE_ENV} emerge --update --deep --newuse world				|| exit 1
	${SAFE_ENV} dispatch-conf							|| exit 1
	${SAFE_ENV} emerge --depclean							|| exit 1
	${SAFE_ENV} revdep-rebuild --ignore						|| exit 1
	${SAFE_ENV} module-rebuild populate						|| exit 1
	${SAFE_ENV} module-rebuild rebuild						|| exit 1
	${SAFE_ENV} emaint --fix all							|| exit 1
	${SAFE_ENV} ${ECLEAN} distfiles --fetch-restricted				|| exit 1
	${SAFE_ENV} ${ECLEAN} packages							|| exit 1

########################################

elif [[ ${1} != -! ]]; then
	if [[ ${1} != -f ]]; then
	${SAFE_ENV} emerge --verbose --sync				|| exit 1; fi
	${SAFE_ENV} emerge --emptytree --fetch-all-uri system world	|| exit 1
fi

################################################################################

declare OPTS="-mindepth 1 -mount \
	    \( -path /.g -prune \) \
	-or \( -path /.runit -prune \) \
	-or \( -path /.setup -prune \) \
	-or \( -path /_gentoo -prune \) \
	-or \( -path /boot -prune \) \
	-or \( -path /lib64/firmware -prune \) \
	-or \( -path /lib64/modules -prune \) \
	-or \( -path /opt/Adobe -prune \) \
	-or \( -path /opt/oracle-jdk-bin-\* -prune \) \
	-or \( -path /opt/sun-jdk-\* -prune \) \
	-or \( -path /tmp -prune \) \
	-or \( -path /usr/lib64/debug -prune \) \
	-or \( -path /usr/portage -prune \) \
	-or \( -path /usr/src/debug -prune \) \
	-or \( -path /usr/src/linux-\* -prune \) \
	-or \( -path /var/db/pkg -prune \) \
	-or \( -path /~~\*~~ -prune \) \
"
(
	eval find -L / ${OPTS} '-or \( -type l -print \)';
	eval find    / ${OPTS} '-or \( -type d -empty -print \)';
	eval find    / ${OPTS} '-or -print' |
		qfile --orphans --from -;
) |
	sort |
	uniq \
	>/_gentoo/_orphans

########################################

${RSYNC_U} ${HOME}/setup/gentoo/ /_gentoo/_gentoo

${SAFE_ENV} ${HOME}/setup/gentoo/.emergent
${SAFE_ENV} ${HOME}/setup/gentoo/.hacks

########################################

echo -en "\n"
wc -l /_gentoo/_packages
wc -l /_gentoo/_packages.db
diff  /_gentoo/_packages.db /_gentoo/_packages |
	${GREP} "^[<>]"

exit 0
################################################################################
# end of file
################################################################################
